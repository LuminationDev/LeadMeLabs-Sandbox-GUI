<Window x:Class="LeadMeLabs_Sandbox.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:bh="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:local="clr-namespace:LeadMeLabs_Sandbox"
        mc:Ignorable="d"
        ShowInTaskbar="{Binding ShowInTaskbar}"
        WindowState="{Binding WindowState}"
        Title="LeadMe Labs Sandbox" Height="450" Width="900"
        ResizeMode="NoResize">
    <Window.DataContext>
        <local:MainWindowViewModel/>
    </Window.DataContext>

    <Window.Resources>
        <Style
            TargetType="{x:Type Button}">

            <Setter Property="Background" Value="#5c5c5b"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Name="border" CornerRadius="10" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsPressed" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="Transparent" />
                            </Trigger>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#a8a8a8"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>

            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="4" />
                </Style>
            </Style.Resources>
        </Style>

        <Style 
            x:Key="MainButton"
            BasedOn="{StaticResource {x:Type Button}}"
            TargetType="{x:Type Button}">

            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="30"/>
            <Setter Property="Width" Value="100"/>
            <Setter Property="HorizontalAlignment" Value="Left"/>
            <Setter Property="VerticalAlignment" Value="Top"/>

            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.0" Color="White" />
                            <GradientStop Offset="1.0" Color="White" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
        </Style>

        <Style 
            TargetType="{x:Type Label}">

            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Height" Value="28"/>
            <Setter Property="Width" Value="120"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>

            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Foreground">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.0" Color="#a8a8a8" />
                            <GradientStop Offset="1.0" Color="#a8a8a8" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>
            <Setter Property="Background">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Offset="0.0" Color="black" />
                            <GradientStop Offset="1.0" Color="black" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

            <Style.Resources>
                <Style TargetType="{x:Type Border}">
                    <Setter Property="CornerRadius" Value="4,4,0,0"/>
                </Style>
            </Style.Resources>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="133"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <local:NotifyIconWrapper NotifyRequest="{Binding NotifyRequest}">
            <bh:Interaction.Triggers>
                <bh:EventTrigger EventName="OpenSelected">
                    <bh:InvokeCommandAction Command="{Binding NotifyIconOpenCommand}"/>
                </bh:EventTrigger>
                <bh:EventTrigger EventName="ExitSelected">
                    <bh:InvokeCommandAction Command="{Binding NotifyIconExitCommand}"/>
                </bh:EventTrigger>
            </bh:Interaction.Triggers>
        </local:NotifyIconWrapper>

        <Grid Grid.Row="0">
            <StackPanel Background="#424242">

                <Grid>
                    <Button 
                        Style="{StaticResource MainButton}" 
                        Content="Send" 
                        Margin="10" 
                        Command="{Binding SendPipeCommand}"
                        ToolTip="Send a message a running pipe server." IsDefault="True"/>

                    <TextBox 
                        x:Name="InputBox"
                        Height="30" 
                        HorizontalAlignment="Stretch"
                        VerticalContentAlignment="Center"
                        Margin="130,10,10,0" 
                        Padding="10,0,0,0"
                        TextWrapping="Wrap"
                        VerticalAlignment="Top">
                        
                        <TextBox.Resources>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="CornerRadius" Value="4"/>
                            </Style>
                        </TextBox.Resources>
                        
                    </TextBox>
                </Grid>
                

                <Grid>
                    <Button 
                        Style="{StaticResource MainButton}"
                        Content="Restart" 
                        Margin="10,10,0,0" 
                        Command="{Binding RestartPipeServerCommand}"
                        ToolTip="Stop and then start the Pipe server."/>

                    <Button 
                        Style="{StaticResource MainButton}"
                        Content="Clear" 
                        Margin="130,10,0,0"
                        Command="{Binding ClearConsoleCommand}"
                        ToolTip="Clear the windows of the current text."/>
                </Grid>

                <Grid Margin="0,20,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label 
                        Grid.Column="0"
                        Content="Sent Message"/>

                    <Label 
                        Grid.Column="1"
                        Content="Received Messsage"/>
                </Grid>
            </StackPanel>
        </Grid>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <ScrollViewer 
                Grid.Column="0"
                x:Name="SentScroll" 
                Cursor="Hand" 
                Background="Black" 
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch">

                <TextBox
                    x:Name="SentWindow"
                    Margin="5"
                    IsReadOnly="true"
                    Foreground="LightGreen"
                    Background="Black"
                    BorderThickness="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    TextWrapping="Wrap">
                    <bh:Interaction.Triggers>
                        <bh:EventTrigger EventName="TextChanged">
                            <bh:CallMethodAction MethodName="ScrollToEnd" TargetObject="{Binding ElementName=SentScroll}"/>
                        </bh:EventTrigger>
                    </bh:Interaction.Triggers>
                </TextBox>
            </ScrollViewer>

            <ScrollViewer 
                Grid.Column="1"
                x:Name="ReceiveScroll" 
                Cursor="Hand" 
                Background="Black" 
                HorizontalAlignment="Stretch" 
                VerticalAlignment="Stretch">

                <TextBox
                    x:Name="ReceiveWindow"
                    Margin="5"
                    IsReadOnly="true"
                    Foreground="LightGreen"
                    Background="Black"
                    BorderThickness="0"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch"
                    TextWrapping="Wrap">
                    <bh:Interaction.Triggers>
                        <bh:EventTrigger EventName="TextChanged">
                            <bh:CallMethodAction MethodName="ScrollToEnd" TargetObject="{Binding ElementName=ReceiveScroll}"/>
                        </bh:EventTrigger>
                    </bh:Interaction.Triggers>
                </TextBox>
            </ScrollViewer>
        </Grid>
    </Grid>

    <bh:Interaction.Triggers>
        <bh:EventTrigger EventName="Loaded">
            <bh:InvokeCommandAction Command="{Binding LoadedCommand}"/>
        </bh:EventTrigger>
        <bh:EventTrigger EventName="Closing">
            <bh:InvokeCommandAction Command="{Binding ClosingCommand}" PassEventArgsToCommand="True"/>
        </bh:EventTrigger>
    </bh:Interaction.Triggers>
</Window>
